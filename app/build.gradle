apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


def typeString = "String"
def typeLong = "Long"

def fieldBaseUrl = "BASE_URL"
def fieldTimeout = "TIMEOUT_MILLIS"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.example.dummyapibrowser"
        minSdkVersion 28
        targetSdkVersion 30
        versionCode 1
        versionName "3.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // enable data-binding
    dataBinding {
        enabled = true
    }

    flavorDimensions 'server'

    productFlavors {

        assignment {
            dimension 'server'
            buildConfigField(typeString, fieldBaseUrl, '"https://jsonplaceholder.typicode.com/"')
            buildConfigField(typeLong, fieldTimeout, '10_000L')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:'

    implementation "androidx.appcompat:appcompat:$appcompat_version"

    implementation "androidx.cardview:cardview:$card_view_version"

    implementation "androidx.fragment:fragment-ktx:$fragment_kotlin_version"

    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Kotlin Extensions and Co-routines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

//    implementation 'com.squareup.retrofit:converter-gson:2.0.0-beta2'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    // logging
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"

    // dagger
    api "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    api "com.google.dagger:dagger-android:$dagger_version"
    api "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    // multi-state-view
    implementation "com.github.Kennyc1012:MultiStateView:$multi_state_view_version"

    // binding collection adapter
    implementation "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:$binding_collection_version"
    implementation "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:$binding_collection_version"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrest_version"
    testImplementation "androidx.arch.core:core-testing:$arch_testing_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$androidx_test_core_version"
    testImplementation "androidx.test.ext:junit:$androidx_test_ext_kotlin_runner_version"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_ext_kotlin_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"


}